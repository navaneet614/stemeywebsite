{"ast":null,"code":"var _jsxFileName = \"/Users/nkadaba/Documents/GitHub/STEMEY/src/Timeline.js\";\nimport React, { Component } from \"react\";\nimport \"./timeline.css\";\nimport Papa from 'papaparse';\nimport speakers from './speakers.csv';\n\nclass Timeline extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"timeline timeline-centered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default Timeline;\n\nfunction cleanSpeakerName(speaker) {\n  speaker = speaker.includes(\"Dr.\") ? speaker.split(\"Dr.\")[1] : speaker;\n  speaker = speaker.trim();\n  return speaker;\n}\n\nexport function TimelineEntry(props) {\n  const [rows, setRows] = React.useState([]);\n  React.useEffect(() => {\n    async function getData() {\n      const response = await fetch(speakers);\n      const reader = response.body.getReader();\n      const result = await reader.read(); // raw array\n\n      const decoder = new TextDecoder('utf-8');\n      const csv = decoder.decode(result.value); // the csv text\n\n      const results = Papa.parse(csv, {\n        header: true\n      }); // object with { data, errors, meta }\n\n      const rows = results.data; // array of objects\n\n      setRows(rows);\n    }\n\n    getData();\n  }, []);\n  let talkDescription = \"\";\n\n  for (let item of rows) {\n    if (cleanSpeakerName(item.speaker) == cleanSpeakerName(props.speaker)) {\n      console.log(item.talkDescription);\n      talkDescription = item.talkDescription;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    class: \"timeline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"timeline-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, props.time)), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"timeline-marker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    class: \"timeline-content\",\n    href: props.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    class: \"timeline-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, props.speaker), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"timeline-professor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, props.professor), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"timeline-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, props.description), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"timeline-detailed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 36\n    }\n  }, talkDescription))));\n}\nexport function TimelineMarker(props) {\n  return /*#__PURE__*/React.createElement(\"li\", {\n    class: \"timeline-item period\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"timeline-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"timeline-marker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"timeline-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    class: \"timeline-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, props.title)));\n}","map":{"version":3,"sources":["/Users/nkadaba/Documents/GitHub/STEMEY/src/Timeline.js"],"names":["React","Component","Papa","speakers","Timeline","constructor","state","data","render","cleanSpeakerName","speaker","includes","split","trim","TimelineEntry","props","rows","setRows","useState","useEffect","getData","response","fetch","reader","body","getReader","result","read","decoder","TextDecoder","csv","decode","value","results","parse","header","talkDescription","item","console","log","time","link","professor","description","TimelineMarker","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC/BI,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAI,MAAA,KAAK,EAAC,4BAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAID;;AAb8B;;AAgBjC,eAAeJ,QAAf;;AAEA,SAASK,gBAAT,CAA0BC,OAA1B,EACA;AACEA,EAAAA,OAAO,GAAGA,OAAO,CAACC,QAAR,CAAiB,KAAjB,IAA0BD,OAAO,CAACE,KAAR,CAAc,KAAd,EAAqB,CAArB,CAA1B,GAAoDF,OAA9D;AACAA,EAAAA,OAAO,GAAGA,OAAO,CAACG,IAAR,EAAV;AACA,SAAOH,OAAP;AACD;;AAED,OAAO,SAASI,aAAT,CAAuBC,KAAvB,EAA8B;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,KAAK,CAACkB,QAAN,CAAe,EAAf,CAAxB;AACAlB,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AAClB,mBAAeC,OAAf,GAAyB;AACvB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACnB,QAAD,CAA5B;AACA,YAAMoB,MAAM,GAAGF,QAAQ,CAACG,IAAT,CAAcC,SAAd,EAAf;AACA,YAAMC,MAAM,GAAG,MAAMH,MAAM,CAACI,IAAP,EAArB,CAHuB,CAGY;;AACnC,YAAMC,OAAO,GAAG,IAAIC,WAAJ,CAAgB,OAAhB,CAAhB;AACA,YAAMC,GAAG,GAAGF,OAAO,CAACG,MAAR,CAAeL,MAAM,CAACM,KAAtB,CAAZ,CALuB,CAKkB;;AACzC,YAAMC,OAAO,GAAG/B,IAAI,CAACgC,KAAL,CAAWJ,GAAX,EAAgB;AAAEK,QAAAA,MAAM,EAAE;AAAV,OAAhB,CAAhB,CANuB,CAM2B;;AAClD,YAAMnB,IAAI,GAAGiB,OAAO,CAAC1B,IAArB,CAPuB,CAOG;;AAC1BU,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD;;AACDI,IAAAA,OAAO;AACV,GAZD,EAYG,EAZH;AAaA,MAAIgB,eAAe,GAAG,EAAtB;;AACA,OAAK,IAAIC,IAAT,IAAiBrB,IAAjB,EACA;AACE,QAAGP,gBAAgB,CAAC4B,IAAI,CAAC3B,OAAN,CAAhB,IAAkCD,gBAAgB,CAACM,KAAK,CAACL,OAAP,CAArD,EACA;AACE4B,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACD,eAAjB;AACAA,MAAAA,eAAe,GAAGC,IAAI,CAACD,eAAvB;AACD;AACF;;AAED,sBACE;AAAI,IAAA,KAAK,EAAC,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOrB,KAAK,CAACyB,IAAb,CADJ,CADF,eAIE;AAAK,IAAA,KAAK,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAG,IAAA,KAAK,EAAC,kBAAT;AAA4B,IAAA,IAAI,EAAEzB,KAAK,CAAC0B,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,KAAK,EAAC,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4B1B,KAAK,CAACL,OAAlC,CADJ,eAEI;AAAG,IAAA,KAAK,EAAC,oBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BK,KAAK,CAAC2B,SAArC,CAFJ,eAGI;AAAG,IAAA,KAAK,EAAC,sBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiC3B,KAAK,CAAC4B,WAAvC,CAHJ,eAIJ;AAAK,IAAA,KAAK,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,eAAJ,CAA/B,CAJI,CALF,CADF;AAcH;AAED,OAAO,SAASQ,cAAT,CAAwB7B,KAAxB,EAA+B;AACpC,sBACE;AAAI,IAAA,KAAK,EAAC,sBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,KAAK,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAK,IAAA,KAAK,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,KAAK,EAAC,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BA,KAAK,CAAC8B,KAAlC,CADJ,CAHJ,CADF;AASD","sourcesContent":["import React, { Component } from \"react\";\nimport \"./timeline.css\";\nimport Papa from 'papaparse';\nimport speakers from './speakers.csv';\n\nclass Timeline extends Component {\n  constructor() {\n    super()\n    this.state = {\n      data: []\n    }\n  }\n\n  render() {\n    return (\n      <ul class=\"timeline timeline-centered\">\n      </ul>\n    );\n  }\n}\n\nexport default Timeline;\n\nfunction cleanSpeakerName(speaker)\n{\n  speaker = speaker.includes(\"Dr.\") ? speaker.split(\"Dr.\")[1] : speaker;\n  speaker = speaker.trim();\n  return speaker;\n}\n   \nexport function TimelineEntry(props) {\n    const [rows, setRows] = React.useState([]);\n    React.useEffect(() => {\n        async function getData() {\n          const response = await fetch(speakers)\n          const reader = response.body.getReader()\n          const result = await reader.read() // raw array\n          const decoder = new TextDecoder('utf-8')\n          const csv = decoder.decode(result.value) // the csv text\n          const results = Papa.parse(csv, { header: true }) // object with { data, errors, meta }\n          const rows = results.data // array of objects\n          setRows(rows)\n        }\n        getData()\n    }, [])\n    let talkDescription = \"\";\n    for (let item of rows)\n    {\n      if(cleanSpeakerName(item.speaker) == cleanSpeakerName(props.speaker))\n      {\n        console.log(item.talkDescription)\n        talkDescription = item.talkDescription\n      }\n    }\n\n    return (\n      <li class=\"timeline-item\">\n        <div class=\"timeline-info\">\n            <span>{props.time}</span>\n        </div>\n        <div class=\"timeline-marker\"></div>\n        <a class=\"timeline-content\" href={props.link} >\n            <h3 class=\"timeline-title\">{props.speaker}</h3>\n            <p class=\"timeline-professor\">{props.professor}</p>\n            <p class=\"timeline-description\">{props.description}</p>\n    <div class=\"timeline-detailed\"><p>{talkDescription}</p></div>\n        </a>\n      </li>\n    );\n}\n\nexport function TimelineMarker(props) {\n  return (\n    <li class=\"timeline-item period\">\n        <div class=\"timeline-info\"></div>\n        <div class=\"timeline-marker\"></div>\n        <div class=\"timeline-content\">\n            <h2 class=\"timeline-title\">{props.title}</h2>\n        </div>\n    </li>\n  );\n}"]},"metadata":{},"sourceType":"module"}