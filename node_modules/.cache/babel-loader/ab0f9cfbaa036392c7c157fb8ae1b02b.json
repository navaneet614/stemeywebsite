{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/nkadaba/Documents/GitHub/stemeywebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _regeneratorRuntime from\"/Users/nkadaba/Documents/GitHub/stemeywebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/nkadaba/Documents/GitHub/stemeywebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/nkadaba/Documents/GitHub/stemeywebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"/Users/nkadaba/Documents/GitHub/stemeywebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/nkadaba/Documents/GitHub/stemeywebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/nkadaba/Documents/GitHub/stemeywebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/nkadaba/Documents/GitHub/stemeywebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import\"./timeline.css\";import Papa from'papaparse';import speakers from'./speakers.csv';var Timeline=/*#__PURE__*/function(_Component){_inherits(Timeline,_Component);var _super=_createSuper(Timeline);function Timeline(){var _this;_classCallCheck(this,Timeline);_this=_super.call(this);_this.state={data:[]};return _this;}_createClass(Timeline,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"ul\",{class:\"timeline timeline-centered\"});}}]);return Timeline;}(Component);export default Timeline;function cleanSpeakerName(speaker){speaker=speaker.includes(\"Dr.\")?speaker.split(\"Dr.\")[1]:speaker;speaker=speaker.trim();return speaker;}export function TimelineEntry(props){var _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),rows=_React$useState2[0],setRows=_React$useState2[1];React.useEffect(function(){function getData(){return _getData.apply(this,arguments);}function _getData(){_getData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,reader,result,decoder,csv,results,rows;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(speakers);case 2:response=_context.sent;reader=response.body.getReader();_context.next=6;return reader.read();case 6:result=_context.sent;// raw array\ndecoder=new TextDecoder('utf-8');csv=decoder.decode(result.value);// the csv text\nresults=Papa.parse(csv,{header:true});// object with { data, errors, meta }\nrows=results.data;// array of objects\nsetRows(rows);case 12:case\"end\":return _context.stop();}}},_callee);}));return _getData.apply(this,arguments);}getData();},[]);var talkDescription=\"\";var _iterator=_createForOfIteratorHelper(rows),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var item=_step.value;if(cleanSpeakerName(item.speaker)==cleanSpeakerName(props.speaker)){console.log(item.talkDescription);talkDescription=item.talkDescription;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return/*#__PURE__*/React.createElement(\"li\",{class:\"timeline-item\"},/*#__PURE__*/React.createElement(\"div\",{class:\"timeline-info\"},/*#__PURE__*/React.createElement(\"span\",null,props.time)),/*#__PURE__*/React.createElement(\"div\",{class:\"timeline-marker\"}),/*#__PURE__*/React.createElement(\"a\",{class:\"timeline-content\",href:props.link},/*#__PURE__*/React.createElement(\"h3\",{class:\"timeline-title\"},props.speaker),/*#__PURE__*/React.createElement(\"p\",{class:\"timeline-professor\"},props.professor),/*#__PURE__*/React.createElement(\"p\",{class:\"timeline-description\"},props.description),/*#__PURE__*/React.createElement(\"div\",{class:\"timeline-detailed\"},/*#__PURE__*/React.createElement(\"p\",null,talkDescription))));}export function TimelineMarker(props){return/*#__PURE__*/React.createElement(\"li\",{class:\"timeline-item period\"},/*#__PURE__*/React.createElement(\"div\",{class:\"timeline-info\"}),/*#__PURE__*/React.createElement(\"div\",{class:\"timeline-marker\"}),/*#__PURE__*/React.createElement(\"div\",{class:\"timeline-content\"},/*#__PURE__*/React.createElement(\"h2\",{class:\"timeline-title\"},props.title)));}","map":{"version":3,"sources":["/Users/nkadaba/Documents/GitHub/stemeywebsite/src/Timeline.js"],"names":["React","Component","Papa","speakers","Timeline","state","data","cleanSpeakerName","speaker","includes","split","trim","TimelineEntry","props","useState","rows","setRows","useEffect","getData","fetch","response","reader","body","getReader","read","result","decoder","TextDecoder","csv","decode","value","results","parse","header","talkDescription","item","console","log","time","link","professor","description","TimelineMarker","title"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./timeline.css\";\nimport Papa from 'papaparse';\nimport speakers from './speakers.csv';\n\nclass Timeline extends Component {\n  constructor() {\n    super()\n    this.state = {\n      data: []\n    }\n  }\n\n  render() {\n    return (\n      <ul class=\"timeline timeline-centered\">\n      </ul>\n    );\n  }\n}\n\nexport default Timeline;\n\nfunction cleanSpeakerName(speaker)\n{\n  speaker = speaker.includes(\"Dr.\") ? speaker.split(\"Dr.\")[1] : speaker;\n  speaker = speaker.trim();\n  return speaker;\n}\n   \nexport function TimelineEntry(props) {\n    const [rows, setRows] = React.useState([]);\n    React.useEffect(() => {\n        async function getData() {\n          const response = await fetch(speakers)\n          const reader = response.body.getReader()\n          const result = await reader.read() // raw array\n          const decoder = new TextDecoder('utf-8')\n          const csv = decoder.decode(result.value) // the csv text\n          const results = Papa.parse(csv, { header: true }) // object with { data, errors, meta }\n          const rows = results.data // array of objects\n          setRows(rows)\n        }\n        getData()\n    }, [])\n    let talkDescription = \"\";\n    for (let item of rows)\n    {\n      if(cleanSpeakerName(item.speaker) == cleanSpeakerName(props.speaker))\n      {\n        console.log(item.talkDescription)\n        talkDescription = item.talkDescription\n      }\n    }\n\n    return (\n      <li class=\"timeline-item\">\n        <div class=\"timeline-info\">\n            <span>{props.time}</span>\n        </div>\n        <div class=\"timeline-marker\"></div>\n        <a class=\"timeline-content\" href={props.link} >\n            <h3 class=\"timeline-title\">{props.speaker}</h3>\n            <p class=\"timeline-professor\">{props.professor}</p>\n            <p class=\"timeline-description\">{props.description}</p>\n    <div class=\"timeline-detailed\"><p>{talkDescription}</p></div>\n        </a>\n      </li>\n    );\n}\n\nexport function TimelineMarker(props) {\n  return (\n    <li class=\"timeline-item period\">\n        <div class=\"timeline-info\"></div>\n        <div class=\"timeline-marker\"></div>\n        <div class=\"timeline-content\">\n            <h2 class=\"timeline-title\">{props.title}</h2>\n        </div>\n    </li>\n  );\n}"]},"metadata":{},"sourceType":"module"}