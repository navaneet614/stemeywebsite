{"ast":null,"code":"var _jsxFileName = \"/Users/nkadaba/Documents/GitHub/STEMEY/src/Footer.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { black } from 'material-ui/styles/colors';\nimport { Button, Grid, TextField } from '@material-ui/core';\nimport { SocialIcon } from 'react-social-icons';\nimport MailchimpSubscribe from 'react-mailchimp-subscribe';\nconst useStyles = makeStyles(theme => ({\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: 'auto',\n    backgroundColor: black\n  },\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  },\n  input: {\n    borderRadius: 10,\n    backgroundColor: 'white'\n  }\n}));\nexport default function Footer() {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"footer\", {\n    className: classes.footer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Join Our Newsletter!\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\" // className={}\n    ,\n    placeholder: \"First Name\",\n    type: \"text\",\n    required: true,\n    inputProps: {\n      className: classes.input\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"email\",\n    placeholder: \"Email\",\n    variant: \"outlined\" // className={}\n    ,\n    required: true,\n    inputProps: {\n      className: classes.input\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, \"Join\")))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SocialIcon, {\n    url: \"youtube.com\",\n    fgColor: \"#FFFFFF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SocialIcon, {\n    url: \"facebook.com\",\n    fgColor: \"#FFFFFF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SocialIcon, {\n    url: \"tumblr.com\",\n    fgColor: \"#FFFFFF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SocialIcon, {\n    url: \"instagram.com\",\n    fgColor: \"#FFFFFF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(MailchimpSubscribe, {\n    url: process.env.REACT_APP_MAILCHIMP_URL,\n    render: ({\n      subscribe,\n      status,\n      message\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MyForm, {\n      onSubmitted: formData => subscribe(formData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }), status === \"sending\" && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"blue\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 50\n      }\n    }, \"sending...\"), status === \"error\" && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      dangerouslySetInnerHTML: {\n        __html: message\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 48\n      }\n    }), status === \"success\" && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"green\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 50\n      }\n    }, \"Subscribed !\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(MailchimpSubscribe, {\n    url: url,\n    render: ({\n      subscribe,\n      status,\n      message\n    }) => /*#__PURE__*/React.createElement(CustomForm, {\n      status: status,\n      message: message,\n      onValidated: formData => subscribe(formData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }));\n}\n\nconst CustomForm = ({\n  status,\n  message,\n  onValidated\n}) => {\n  let email, name;\n\n  const submit = () => email && name && email.value.indexOf(\"@\") > -1 && onValidated({\n    EMAIL: email.value,\n    NAME: name.value\n  });\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: \"#efefef\",\n      borderRadius: 2,\n      padding: 10,\n      display: \"inline-block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, status === \"sending\" && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"blue\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 38\n    }\n  }, \"sending...\"), status === \"error\" && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    dangerouslySetInnerHTML: {\n      __html: message\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }), status === \"success\" && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"green\"\n    },\n    dangerouslySetInnerHTML: {\n      __html: message\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      fontSize: \"2em\",\n      padding: 5\n    },\n    ref: node => name = node,\n    type: \"text\",\n    placeholder: \"Your name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      fontSize: \"2em\",\n      padding: 5\n    },\n    ref: node => email = node,\n    type: \"email\",\n    placeholder: \"Your email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      fontSize: \"2em\",\n      padding: 5\n    },\n    onClick: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, \"Submit\"));\n};","map":{"version":3,"sources":["/Users/nkadaba/Documents/GitHub/STEMEY/src/Footer.js"],"names":["React","makeStyles","black","Button","Grid","TextField","SocialIcon","MailchimpSubscribe","useStyles","theme","footer","padding","spacing","marginTop","backgroundColor","root","margin","width","input","borderRadius","Footer","classes","form","className","process","env","REACT_APP_MAILCHIMP_URL","subscribe","status","message","formData","color","__html","url","CustomForm","onValidated","email","name","submit","value","indexOf","EMAIL","NAME","background","display","fontSize","node"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { black } from 'material-ui/styles/colors';\nimport { Button, Grid, TextField } from '@material-ui/core';\nimport { SocialIcon } from 'react-social-icons';\nimport MailchimpSubscribe from 'react-mailchimp-subscribe';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    footer: {\n        padding: theme.spacing(3, 2),\n        marginTop: 'auto',\n        backgroundColor: black,\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n    input: {\n        borderRadius: 10,\n        backgroundColor: 'white'\n\n    },\n}));\n\nexport default function Footer() {\n    const classes = useStyles();\n    return (\n        <footer className={classes.footer}>\n            <h2 justify=\"center\">Join Our Newsletter!</h2>\n            <br />\n            <form className={classes.form} noValidate autoComplete=\"off\">\n                <Grid container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    spacing={2}>\n                    <Grid item>\n                        <TextField variant=\"outlined\"\n                            // className={}\n                            placeholder=\"First Name\"\n                            type=\"text\"\n                            required\n                            inputProps={{ className: classes.input }}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <TextField type=\"email\"\n                            placeholder=\"Email\"\n                            variant=\"outlined\"\n                            // className={}\n                            required\n                            inputProps={{ className: classes.input }}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <Button size=\"large\" variant=\"contained\">Join</Button>\n                    </Grid>\n                </Grid>\n            </form>\n            <br />\n            <Grid container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                spacing={3}>\n                <Grid item>\n                    <SocialIcon url=\"youtube.com\" fgColor=\"#FFFFFF\"></SocialIcon>\n                </Grid>\n                <Grid item>\n                    <SocialIcon url=\"facebook.com\" fgColor=\"#FFFFFF\"></SocialIcon>\n                </Grid>\n                <Grid item>\n                    <SocialIcon url=\"tumblr.com\" fgColor=\"#FFFFFF\"></SocialIcon>\n                </Grid>\n                <Grid item>\n                    <SocialIcon url=\"instagram.com\" fgColor=\"#FFFFFF\"></SocialIcon>\n                </Grid>\n            </Grid>\n            <MailchimpSubscribe\n                url={process.env.REACT_APP_MAILCHIMP_URL}\n                render={({ subscribe, status, message }) => (\n                    <div>\n                        <MyForm onSubmitted={formData => subscribe(formData)} />\n                        {status === \"sending\" && <div style={{ color: \"blue\" }}>sending...</div>}\n                        {status === \"error\" && <div style={{ color: \"red\" }} dangerouslySetInnerHTML={{ __html: message }} />}\n                        {status === \"success\" && <div style={{ color: \"green\" }}>Subscribed !</div>}\n                    </div>\n                )}\n            />\n            <MailchimpSubscribe\n                url={url}\n                render={({ subscribe, status, message }) => (\n                    <CustomForm\n                        status={status}\n                        message={message}\n                        onValidated={formData => subscribe(formData)}\n                    />\n                )}\n            />\n        </footer>\n    );\n}\n\nconst CustomForm = ({ status, message, onValidated }) => {\n    let email, name;\n    const submit = () =>\n        email &&\n        name &&\n        email.value.indexOf(\"@\") > -1 &&\n        onValidated({\n            EMAIL: email.value,\n            NAME: name.value\n        });\n\n    return (\n        <div\n            style={{\n                background: \"#efefef\",\n                borderRadius: 2,\n                padding: 10,\n                display: \"inline-block\"\n            }}\n        >\n            {status === \"sending\" && <div style={{ color: \"blue\" }}>sending...</div>}\n            {status === \"error\" && (\n                <div\n                    style={{ color: \"red\" }}\n                    dangerouslySetInnerHTML={{ __html: message }}\n                />\n            )}\n            {status === \"success\" && (\n                <div\n                    style={{ color: \"green\" }}\n                    dangerouslySetInnerHTML={{ __html: message }}\n                />\n            )}\n            <input\n                style={{ fontSize: \"2em\", padding: 5 }}\n                ref={node => (name = node)}\n                type=\"text\"\n                placeholder=\"Your name\"\n            />\n            <br />\n            <input\n                style={{ fontSize: \"2em\", padding: 5 }}\n                ref={node => (email = node)}\n                type=\"email\"\n                placeholder=\"Your email\"\n            />\n            <br />\n            <button style={{ fontSize: \"2em\", padding: 5 }} onClick={submit}>\n                Submit\n        </button>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}